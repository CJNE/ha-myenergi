name: Linting

on:
  push:
    branches:
      - main
      - master
      - dev
  pull_request:
  schedule:
    - cron: "0 0 * * *"
  workflow_dispatch:

env:
  DEFAULT_PYTHON: 3.13

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    name: Pre-commit
    strategy:
      fail-fast: false
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.2.2

      - name: Set up Python ${{ env.DEFAULT_PYTHON }}
        uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}

      - name: Upgrade pip
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip --version

      - name: Install Python modules
        run: |
          pip install --constraint=.github/workflows/constraints.txt pre-commit black flake8

      - name: Run pre-commit on all files
        run: |
          pre-commit run --all-files --show-diff-on-failure --color=always

      - name: Commit changes 
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: format code with Pre-commit'
  
  ruff-format:
    runs-on: ubuntu-latest
    name: Ruff format
    strategy:
      fail-fast: false
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.2.2
        
      - name: Setup Ruff
        uses: astral-sh/ruff-action@v3
        with:
          args: "--version" # replace default "check" argument to do setup only.
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }} # optional to reduce api calls
      
      - name: Run Ruff format
        run: ruff format # auto format
      
      - name: Run Ruff check --fix
        run: ruff check --fix-only # auto-fix
      
      - name: Commit changes # auto commit format changes.
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'chore: format code with Ruff'

  ruff-check:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4.2.2
        with:
          github-token: ${{ secrets.CUSTOM_GITHUB_TOKEN }} # optional to reduce api calls
      
      - name: Run Ruff check
        uses: astral-sh/ruff-action@v3

  hacs:
    runs-on: ubuntu-latest
    name: HACS
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v4.2.2"

      - name: HACS validation
        uses: "hacs/action@22.5.0"
        with:
          category: "integration"
          ignore: brands

  hassfest:
    runs-on: ubuntu-latest
    name: Hassfest
    steps:
      - name: Check out the repository
        uses: "actions/checkout@v4.2.2"

      - name: Hassfest validation
        uses: "home-assistant/actions/hassfest@master"
  
  tests:
    runs-on: ubuntu-latest
    name: Run tests
    strategy:
      fail-fast: false
    steps:
      - name: Check out code from GitHub
        uses: "actions/checkout@v4.2.2"
      - name: Setup Python ${{ env.DEFAULT_PYTHON }}
        uses: "actions/setup-python@v5.6.0"
        with:
          python-version: ${{ env.DEFAULT_PYTHON }}
      - name: Install requirements
        run: |
          pip install --constraint=.github/workflows/constraints.txt pip
          pip install -r requirements_test.txt
      - name: Tests suite
        run: |
          pytest \
            --timeout=9 \
            --durations=10 \
            -n auto \
            -p no:sugar \
            tests
